Componentes de la práctica
	o La práctica pretende realizar los componentes necesarios para gestionar esas tablas. En concreto:
	o Paquete para gestionar las facturas
	o Paquete para gestionar las líneas de factura
	o Triggers para controlar el acceso a las tablas

1. PAQUETE FACTURAS
PROCEDIMIENTOS
	• ALTA_FACTURA (COD_FACTURA, FECHA,DESCRIPCIÓN).
		o Debe dar de alta una factura con los valores indicados en los parámetros
		o Debe comprobar que no se duplica

	• BAJA_FACTURA (cod_factura).
		o Debe borrar la factura indicada en el parámetros
		o Debe borrar también las líneas de facturas asociadas en la tabla LINEAS_FACTURA.

	• MOD_DESCRI(COD_FACTURA, DESCRIPCION).
		o Debe modificar la descripción de la factura que tenga el código del parámetro con la nueva descripción

	• MOD_FECHA (COD_FACTURA,FECHA).
	o Debe modificar la descripción de la factura que tenga el código del parámetro con la nueva fecha

FUNCIONES
	• NUM_FACTURAS(FECHA_INICIO,FECHA_FIN).
		o Devuelve el número de facturas que hay entre esas fechas

	• TOTAL_FACTURA(COD_FACTURA.)
	o Devuelve el total de la factura con ese código. Debe hacer el sumatorio de “pvp*unidades” de las líneas de esa factura en la tabla
	  LINEAS_FACTURA

2. PAQUETE LINEA_FACTURAS
PROCEDIMIENTOS
	• ALTA_LINEA (COD_FACTURA, COD_PRODUCTO, UNIDADES,FECHA)
		o Procedimiento para insertar una línea de Factura
		o Debe comprobar que existe ya la factura antes de insertar el registro.
		o También debemos comprobar que existe el producto en la tabla de PRODUCTOS.
		o El PVP debemos seleccionarlo de la tabla PRODUCTOS.

	• BAJA_LINEA (cod_factura, COD_PRODUCTO)
		o Damos de baja la línea con esa clave primaria)
	• MOD_PRODUCTO(COD_FACTURA,COD_PRODUCTO,PARAMETRO)
		o Se trata de 2 métodos sobrecargados, es decir el segundo parámetro debe admitir los siguientes valores:
			▪ MOD_PRODUCTO(COD_FACTURA,COD_PRODUCTO,UNIDADES)
			▪ MOD_PRODUCTO(COD_FACTURA,COD_PRODUCTO,FECHA)
		o Por tanto, debe modificar o bien unidades si se le pasa un NUMBER o bien la fecha si se le pasa un DATE FUNCIONES

	• NUM_LINEAS(COD_FACTURA)
		o Devuelve el número de líneas de la factura

3. TRIGGERS
	3.1
	• Creamos 2 triggers, uno para la tabla FACTURAS y otro para la tabla LINEAS_FACTURA
	• Cada cambio en alguna de las tablas (Insert, update, delete), debe generar una entrada en la tabla CONTROL_LOG con los datos siguientes:
		o Tabla (FACTURAS O LONEAS_FACTURA)
		o Fecha → usamos la función SYSDATE
		o Usuario que lo ha realizado → función USER
		o Operación realizada (I-U-D)
	3.2
	• La columna TOTAL_VENDIDO, de la tabla PRODUCTOS mantiene el total de ventas de un determinado producto.
	• Para controlarlo, creamos un Trigger de tipo fila sobre la tabla LINEAS_FACTURA, de forma que cada vez que se añada, cambie o borre 
	una línea se actualice en la tabla PRODUCTOS la columna TOTAL_VENDIDO.
	• Si se inserta una nueva línea con ese producto, se debe añadir el total al campo.
	• Si se borra la línea debemos restar el total
	• Si se modifica, debemos comprobar si el valor antiguo era superior al nuevo y sumamos o restamos dependiendo del resultado